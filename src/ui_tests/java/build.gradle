plugins {
    // https://blog.gradle.org/java-toolchains
    // Java toolchains allow us to specify an exact JDK version to use when compiling,
    // and will download it if it's not found on the user's machine.
    id "java-library"
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {

    // JUnit for running unit tests
    testImplementation 'junit:junit:4.12'

    // Selenium for testing commonly-used browsers
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'

    // Logging framework to see what is happening in real time
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.1'

    // Provides the ability to use the SLF4J API calls
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.12.1'

    // Used to make API calls during tests.
    // See https://hc.apache.org/httpcomponents-client-4.5.x/fluent-hc/dependency-info.html
    implementation 'org.apache.httpcomponents:fluent-hc:4.5.12'

    // HtmlUnit is a browser controlled directly by Java (runs really fast without UI)
    // https://mvnrepository.com/artifact/net.sourceforge.htmlunit/htmlunit
    implementation group: 'net.sourceforge.htmlunit', name: 'htmlunit', version: '2.39.1'

    // Updated WebDriverManager dependency (auto-manages the required driver versions)
    testImplementation("io.github.bonigarcia:webdrivermanager:5.8.0")
}

// More info on test logging: https://discuss.gradle.org/t/whats-upcoming-in-gradle-1-1-test-logging/7741
test {
    maxParallelForks = 1  // Disable parallel execution

    testLogging {
        exceptionFormat "full" // Detailed exception logging
        // Uncomment below to see the unit test progress in the output:
        // events "started", "passed", "skipped", "failed", "standardOut", "standardError"
        events "passed", "skipped", "failed", "standardOut", "standardError"

        showExceptions true    // Enable detailed failure logs
        showStandardStreams true  // Inline standard out and error streams with test results
    }

    // Fail the 'test' task on the first test failure
    failFast = true
}
